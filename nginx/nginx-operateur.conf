user  nginx;

events {
    worker_connections   1000;
}
http {
        include mime.types;

        log_format  proxy_log  '[$time_local] $remote_addr - $remote_user "$host$request_uri" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"'
                              ' Proxy: "$proxy_host" "$upstream_addr"';
        upstream backend {
          server camera:8888;
        }

        port_in_redirect off;

        access_log /dev/stdout proxy_log;
        proxy_read_timeout 1h;
        proxy_connect_timeout 1h;
        proxy_send_timeout 1h;

        server {
            listen 80;

            location /api {
              proxy_pass http://back-operateur:8080;
            }

            location ~* /camera/(.*)$ {
                proxy_pass http://backend/$1;
            }

            location / {
                add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                add_header Last-Modified $date_gmt;
                if_modified_since off;
                expires off;
                etag off;
                root /usr/share/nginx/html;
                index index.html;
            }
						  # set client body size to 100 MB #
			client_max_body_size 800M;
        }

}
